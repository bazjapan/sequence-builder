<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"  creationComplete="cc()" xmlns:components="jp.unchained.views.components.*" xmlns:components1="com.pbsmediatech.sequenceBuilder.views.components.*" xmlns:custom="com.pbsmediatech.sequenceBuilder.views.components.field.custom.*" xmlns:image="image.*">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>


	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.pbsmediatech.code.method_builders.sql.makeSQLAddColumnToTable;
			import com.pbsmediatech.code.method_builders.sql.makeSQLRemoveColumnFromTableScript;
			import com.pbsmediatech.sequenceBuilder.AppModel;
			import com.pbsmediatech.sequenceBuilder.assets.IconLib;
			import com.pbsmediatech.sequenceBuilder.views.components.field.shared_actions.show_field_json;
			import com.pbsmediatech.sequenceBuilder.views.components.renderer.TableColumnRenderer;
			import com.pbsmediatech.sequenceBuilder.views.components.table.KeyFieldList;
			import com.pbsmediatech.sequenceBuilder.views.components.table.TableEditor;
			import com.pbsmediatech.sequenceBuilder.views.events.FieldEvent;
			import com.pbsmediatech.sequenceBuilder.views.tasks.fieldHasVariableLengthProperty;
			import com.pbsmediatech.sequenceBuilder.views.tasks.findFieldByName;
			import com.pbsmediatech.sequenceBuilder.views.tasks.getDefaultFieldSizeByFieldType;
			import com.pbsmediatech.sequenceBuilder.views.tasks.getFieldInfo;
			import com.pbsmediatech.sequenceBuilder.views.tasks.getNumRecords;
			
			import db.field.Field;
			import db.field.IDFieldSize;
			import db.field.custom.custom_object_fields;
			import db.getFieldTypeLength;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import spark.events.IndexChangeEvent;
			
			import utils.ac.moveItemDown;
			import utils.ac.moveItemUp;
			import utils.events.CallbackEvent;
			import utils.object.isEmpty;
			import utils.object.isNull;
			
			
			[Bindable]public var fields:ArrayCollection;
			public var parent_field:Field;
			public var custom_type_set:String;//set by cc_custom_object_setter
			[Bindable]
			private function cc():void
			{
				cc_custom_object_setter.addEventListener("SET_CUSTOM_OBJECT",onSET_CUSTOM_OBJECT);
				cc_custom_object_setter.addEventListener("CLEAR_CUSTOM_OBJECT",onCLEAR_CUSTOM_OBJECT);
			}

			private function onCLEAR_CUSTOM_OBJECT(event:Event):void
			{
				
				if(!isEmpty(parent_field.custom) && cc_custom_object_setter.getCustomType() == parent_field.custom){
				custom_type_set = "";
				fields.source = [];}
			}

			private function onSET_CUSTOM_OBJECT(event:Event):void
			{
				custom_type_set = cc_custom_object_setter.getCustomType();
				fields.source = custom_object_fields(custom_type_set);
			}
			
			public var saveFunc:Function;
			public var cancelFunc:Function;
			
			
			public function set_parent_field(f:Field):void
			{
				parent_field = f;
				cc_custom_object_setter.setField(parent_field);
			}
			
			protected function btn_cancel_clickHandler(event:MouseEvent):void
			{
				if(cancelFunc != null){
					cancelFunc()
				}
			}
		
			protected function btn_save_clickHandler(event:MouseEvent):void
			{
				if(saveFunc != null){
					parent_field.custom = isEmpty(custom_type_set)?"":custom_type_set;
					saveFunc(fields)
				}
			}
		
	
			
			
			
			
		
			
		

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
			
	
	
	<mx:HRule width="100%"/>
	<s:HGroup width="100%">
		<custom:NestedCustomObjectSetter id="cc_custom_object_setter" width="100%">
			
		</custom:NestedCustomObjectSetter>
	</s:HGroup>
<components1:TableRows width="100%" height="100%" fields="{fields}">
	
</components1:TableRows>
	<mx:ControlBar width="100%">
		<s:HGroup width="100%" height="100%">
			<s:HGroup width="100%" height="100%">
				<s:Button label="Cancel" id="btn_cancel" click="btn_cancel_clickHandler(event)"/>
			</s:HGroup>
			<s:HGroup width="100%" height="100%" horizontalAlign="right">
				<s:Button label="Save &amp; Close" id="btn_save" click="btn_save_clickHandler(event)"/>	
			</s:HGroup>	
		</s:HGroup>
	</mx:ControlBar>
</s:Group>

<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center">
			
		</s:VerticalLayout>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import com.pbsmediatech.sequenceBuilder.AppModel;
			
			import db.field.Field;
			import db.field.custom.custom_fields_by_parent_field_type;
			
			import mx.collections.ArrayCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.events.TextOperationEvent;
			
			[Bindable]
			private var types:ArrayCollection = new ArrayCollection([]);
			
			public var save_func:Function;
			public var cancel_func:Function;
			
			[Bindable]
			public var field:Field;
			
			
			protected function dd_types_changeHandler(event:IndexChangeEvent):void
			{
				// TODO Auto-generated method stub
			}
			
			
			protected function btn_clear_clickHandler(event:MouseEvent):void
			{
				dd_types.selectedIndex = -1;
				field.nested_schema_name = "";
				field.is_nc = false;
				dispatchEvent(new Event("CLEAR_CUSTOM_OBJECT"));
			}
			
			
			
			
			
			protected function btn_save_clickHandler(event:MouseEvent):void
			{
				field.nested_schema_name = getCustomType();
				if(save_func != null)save_func();
				field.is_nc = true;
				dispatchEvent(new Event("SET_CUSTOM_OBJECT"));

			}
			
			public function setField(f:Field):void
			{
				field = f;
				types.source = custom_fields_by_parent_field_type(f.field_type, AppModel.getInstance().master_config);
				
				
				var cType:String = f.custom;	
				for (var i:int = 0; i < types.length; i++)
				{
					var t:String = types[i] as String;
					if(t == cType){
						
						dd_types.selectedIndex = i;
					}
				}
				
				
			}
			public function getCustomType():String
			{
				if(dd_types.selectedIndex>-1){
					return dd_types.selectedItem as String;
				}
				return null;
				
			}
			

			protected function ti_nested_schema_name_changeHandler(event:TextOperationEvent):void
			{
				field.nested_schema_name = ti_nested_schema_name.text;
			}

		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	
	<s:HGroup width="100%">
		<s:DropDownList id="dd_types" dataProvider="{types}" change="dd_types_changeHandler(event)" prompt="Select Type"/>
		<s:Button id="btn_clear" click="btn_clear_clickHandler(event)" label="Clear"/>
		<s:Button id="btn_save" enabled="{dd_types.selectedIndex>-1}" click="btn_save_clickHandler(event)" label="Set"/>
		<s:Label text="Schema Name">
			
		</s:Label>
		<s:TextInput change="ti_nested_schema_name_changeHandler(event)" maxChars="20" restrict="A-z _" text="{field.nested_schema_name}" id="ti_nested_schema_name" enabled="{!field.is_nc}">
			
		</s:TextInput> 
	</s:HGroup>
	
	
	
</s:Group>

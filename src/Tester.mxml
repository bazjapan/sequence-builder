<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" minWidth="955" minHeight="600" creationComplete="cc()">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.JSON;
			import com.pbsmediatech.sequenceBuilder.views.components.common.KeyValuePair;
			import com.pbsmediatech.sequenceBuilder.views.components.common.KeyValuePairAdder;
			import com.pbsmediatech.sequenceBuilder.views.components.field.validation.FieldValidation;
			import com.pbsmediatech.sequenceBuilder.views.components.field.validation.ValidationSetter;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.validators.IValidator;
			
			public function cc():void{
				
				var myValidation : Object = new Object();
				myValidation.maxLength = {value:100};
				myValidation.pattern = {value:"blah blah"};
				
				
				var context:DisplayObject = this;
				var fv:FieldValidation = new FieldValidation(
				function():void{
					var vs:ValidationSetter = new ValidationSetter();
					PopUpManager.addPopUp(vs,context);
					vs.validationConfig = fv;
					vs.setFieldType("varchar");
					vs.saveFunc = function(validators:Object):void{
						trace(JSON.encode(validators,true));
					};
					vs.setCurrentValidation(myValidation);
					
					
				}
				);
				
			
				
			
			
			}
			
		]]>
	</fx:Script>
	
	
</s:Application>
